name: rust cargo run
description: Rust Cargo Run
inputs:
  command:
    description: The cargo command to execute
    required: true
  args:
    description: The arguments to provide for the cargo command
    required: false
  components:
    description: The components to include when installing Rust
    required: false
runs:
  using: composite
  steps:
  - name: Installing Rust
    uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1.0.7
    with:
      profile: minimal
      target: wasm32-unknown-unknown
      override: true
      components: ${{ inputs.components }}
  # we don't check the lockfile in; this is needed for cache restoration/saving
  - name: Generating Cargo.lock
    uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1.0.3
    with:
      command: generate-lockfile
  - name: Setting up cache
    uses: pl-strflt/rust-sccache-action@v1
    env:
      SCCACHE_CACHE_SIZE: 2G
      SCCACHE_DIR: ${{ github.workspace }}/.cache/sccache
      CACHE_SKIP_SAVE: ${{ matrix.push == '' || matrix.push == 'false' }}
    with:
      version: v0.2.15
      # change this to invalidate sccache for this job
      shared-key: v1
  - name: Running ${{ inputs.command }}
    uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1.0.3
    env:
      CARGO_INCREMENTAL: '0'
    with:
      command: ${{ inputs.command }}
      args: ${{ inputs.args }}
  - name: make bundle
    if: ${{ inputs.command == 'build' }}
    run: ./build-bundle.sh
    shell: bash
  - name: upload bundle
    if: ${{ inputs.command == 'build' }}
    run: ./upload-bundle.sh
    shell: bash
  - name: Publishing build artifacts to github
    if: ${{ inputs.command == 'build' }}
    uses: actions/upload-artifact@v2
    with:
      name: bundle
      path: |
        output/builtin-actors.car
        output/upload.json
