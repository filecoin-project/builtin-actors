name: Upload Release Assets

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'The name of the tag to upload assets for'
        required: true
        type: string
  workflow_call:
    inputs:
      tag_name:
        required: true
        type: string

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ inputs.tag_name || github.ref }}
  cancel-in-progress: true

jobs:
  upload-release-assets:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CARGO_INCREMENTAL: 0
      CACHE_SKIP_SAVE: true
      RUSTFLAGS: -Dwarnings
    strategy:
      matrix:
        network: [ 'mainnet', 'caterpillarnet', 'butterflynet', 'calibrationnet', 'devnet', 'testing', 'testing-fake-proofs' ]
    steps:
    - id: tag
      env:
        TAG_NAME: ${{ inputs.tag_name }}
      run: |
        if [[ "$TAG_NAME" != '' ]]; then
          echo "name=$TAG_NAME" | tee -a "$GITHUB_OUTPUT"
        else
          echo "name=${GITHUB_REF#refs/tags/}" | tee -a "$GITHUB_OUTPUT"
        fi
    - name: Checking out the release
      uses: actions/checkout@v4
      with:
        ref: ${{ format('refs/tags/{0}', steps.tag.outputs.name) }}
    - name: Setting up cache
      uses: pl-strflt/rust-sccache-action@v1
      env:
        SCCACHE_CACHE_SIZE: 2G
        SCCACHE_DIR: ${{ github.workspace }}/.cache/sccache
        CACHE_SKIP_SAVE: true
    - name: Writing bundle
      env:
        BUILD_FIL_NETWORK: ${{ matrix.network }}
      run: |
        make bundle-repro
    - name: Upload release assets to GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_RELEASE_URL: ${{ github.api_url }}/repos/${{ github.repository }}/releases/${{ steps.tag.outputs.name }}
        BUILD_FIL_NETWORK: ${{ matrix.network }}
      run: |
        git checkout $GITHUB_REF -- scripts/upload-release-assets.sh
        ./scripts/upload-release-assets.sh
