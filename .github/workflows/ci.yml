name: Continuous integration

on:
  push:

env:
  RUSTFLAGS: -Dwarnings

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
    - name: Checking out
      uses: actions/checkout@v2
    - name: Running rustfmt
      uses: ./.github/actions/rust-cargo-run
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        command: fmt
        args: -- --check
        components: rustfmt

  check-clippy:
    runs-on: ubuntu-latest
    steps:
    - name: Checking out
      uses: actions/checkout@v2
    - name: Running clippy
      uses: ./.github/actions/rust-cargo-run
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        command: clippy
        args: --all --all-targets
        components: clippy

  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checking out
      uses: actions/checkout@v2
    - name: Running tests
      uses: ./.github/actions/rust-cargo-run
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        command: test
        args: --all

  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CARGO_INCREMENTAL: 0
      CACHE_SKIP_SAVE: ${{ matrix.push == '' || matrix.push == 'false' }}
    strategy:
      matrix:
        network: [ 'mainnet', 'caterpillarnet', 'butterflynet', 'calibrationnet', 'devnet' ]
    steps:
    - name: Checking out
      uses: actions/checkout@v2
    - name: Install Rust toolchain
      uses: ./.github/actions/rust-cargo-run
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        command: version
    - name: Making bundle
      env:
        BUILD_FIL_NETWORK: ${{ matrix.network }}
      run: ./build-bundle.sh
    - name: Uploading bundle to Estuary
      env:
        ESTUARY_TOKEN: ${{ secrets.ESTUARY_TOKEN }}
      run: |
        BUNDLE_PATH="output/builtin-actors.car"
        UPLOAD_AS="builtin-actors-${{ matrix.network }}.car"
        curl -k -X POST -F "data=@${BUNDLE_PATH};type=application/octet-stream;filename=\"${UPLOAD_AS}\"" \
          -H "Authorization: Bearer $ESTUARY_TOKEN" \
          -H "Content-Type: multipart/form-data" \
          https://shuttle-4.estuary.tech/content/add > output/upload.json
        cat output/upload.json
        shasum -a 256 "$BUNDLE_PATH" > "$BUNDLE_PATH".sha256sum
    - name: Publishing build artifacts to GitHub
      uses: actions/upload-artifact@v2
      with:
        name: bundle-${{ matrix.network }}
        path: |
         output/builtin-actors.car
         output/builtin-actors.car.sha256sum
         output/upload.json
