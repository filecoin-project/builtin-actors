name: Continuous integration

on:
  push:
    branches:
      - master
  pull_request:

env:
  RUSTFLAGS: -Dwarnings

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
    - name: Checking out
      uses: actions/checkout@v2
    - name: Running rustfmt
      uses: ./.github/actions/rust-cargo-run
      with:
        command: fmt
        args: -- --check
        components: rustfmt
        github_token: ${{ secrets.GITHUB_TOKEN }}

  check-clippy:
    runs-on: ubuntu-latest
    steps:
    - name: Checking out
      uses: actions/checkout@v2
    - name: Running clippy
      uses: ./.github/actions/rust-cargo-run
      with:
        command: clippy
        args: --all --all-targets -- -D warnings
        components: clippy
        github_token: ${{ secrets.GITHUB_TOKEN }}

  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checking out
      uses: actions/checkout@v2
    - name: Running tests
      uses: ./.github/actions/rust-cargo-run
      with:
        command: test
        args: --all
        github_token: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    env:
      CARGO_INCREMENTAL: 0
      CACHE_SKIP_SAVE: ${{ matrix.push == '' || matrix.push == 'false' }}
    strategy:
      matrix:
        network: [ 'mainnet', 'caterpillarnet', 'butterflynet', 'calibrationnet', 'devnet', 'testing', 'testing-fake-proofs' ]
    steps:
    - name: Checking out
      uses: actions/checkout@v2
    - name: Install Rust toolchain
      uses: ./.github/actions/rust-cargo-run
      with:
        command: version
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Writing bundle
      env:
        BUILD_FIL_NETWORK: ${{ matrix.network }}
      run: |
        cargo run -- -o output/builtin-actors.car
